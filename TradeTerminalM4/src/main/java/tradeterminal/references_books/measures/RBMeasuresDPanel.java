/*
 * ARBPanel_MIdNamDes.java
 *
 * Created on 2 Март 2008 г., 23:22
 */
package tradeterminal.references_books.measures;

import java.awt.Dimension;
import minersinstrument.ui.IADialogPanel;

/**
 *
 * @author  kopychenko
 */
public final class RBMeasuresDPanel extends javax.swing.JPanel implements IADialogPanel {

    /** Creates new form ARBPanel_MIdNamDes */
    public RBMeasuresDPanel() {
        initComponents();

        jScrollPane1.getVerticalScrollBar().setPreferredSize(new Dimension(32, 32));
        jScrollPane1.getHorizontalScrollBar().setPreferredSize(new Dimension(32, 32));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        mtypeCheckBox = new javax.swing.JCheckBox();

        jLabel1.setText("Наименование");

        jLabel2.setText("Краткое описание");

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setFont(new java.awt.Font("DialogInput", 0, 12)); // NOI18N
        descriptionTextArea.setLineWrap(true);
        descriptionTextArea.setRows(5);
        descriptionTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(descriptionTextArea);

        mtypeCheckBox.setText("Делимое");
        mtypeCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtypeCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(mtypeCheckBox)
                    .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mtypeCheckBox)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mtypeCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtypeCheckBoxActionPerformed
    }//GEN-LAST:event_mtypeCheckBoxActionPerformed

    @Override
    public boolean checkPanel() {
        if (nameTextField.getText().trim().equals("")) {
            return false;
        } else {
            return true;
        }
    }

    @Override
    public void openPanel() {
        nameTextField.requestFocus();
    }

    public String getDescription() {
        return descriptionTextArea.getText();
    }

    public void setDescription(String s) {
        descriptionTextArea.setText(s);
    }

    public String get_Name() {
        return nameTextField.getText();
    }

    public void set_Name(String s) {
        nameTextField.setText(s);
    }

    public Boolean getMtype() {
        return mtypeCheckBox.isSelected();
    }

    public void setMtype(Boolean b) {
        mtypeCheckBox.setSelected(b);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox mtypeCheckBox;
    private javax.swing.JTextField nameTextField;
    // End of variables declaration//GEN-END:variables
}
