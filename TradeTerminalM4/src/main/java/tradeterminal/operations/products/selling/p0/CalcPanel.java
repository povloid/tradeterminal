/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * calcPanel.java
 *
 * Created on 26.02.2013, 16:43:50
 */
package tradeterminal.operations.products.selling.p0;

import java.awt.Component;
import java.awt.event.WindowEvent;
import java.lang.Class;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import minersinstrument.ui.ADialogFocusLisner;
import minersinstrument.ui.IADialogPanel;

/**
 *
 * @author povloid
 */
public class CalcPanel extends javax.swing.JPanel implements IADialogPanel {

    private DecimalFormat df = new DecimalFormat();
    private NumberFormat nf = NumberFormat.getInstance();
    private ImageIcon measuresIcon0 = new javax.swing.ImageIcon(getClass().getResource("/tradeterminal/icons/TT_icons/32X32/del.png"));
    private double summ;

    /** Creates new form calcPanel */
    public CalcPanel(double summ) {
        this.summ = summ;

        initComponents();

        clearButton.setIcon(measuresIcon0);

        clientMSummSpinner.requestFocus();

        ADialogFocusLisner adf = new ADialogFocusLisner();
        clientMSummSpinner.setModel(new SpinnerNumberModel(
                0d,
                0d,
                1000000000d,
                5d));

        ((JSpinner.DefaultEditor) clientMSummSpinner.getEditor()).getTextField().addFocusListener(adf);
        ((JSpinner.DefaultEditor) clientMSummSpinner.getEditor()).getTextField().addKeyListener(new java.awt.event.KeyAdapter() {

            @Override
            public void keyReleased(java.awt.event.KeyEvent evt) {
                calc();
            }
        });



        calc();
    }

    @Override
    public boolean checkPanel() {
        return true;
    }

    @Override
    public void openPanel() {
        ((JSpinner.DefaultEditor) clientMSummSpinner.getEditor()).getTextField().requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        summLabel = new javax.swing.JLabel();
        clientMSummSpinner = new javax.swing.JSpinner();
        toClientLabel = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(400, 240));
        setLayout(new java.awt.BorderLayout(4, 4));

        summLabel.setFont(new java.awt.Font("Dialog", 1, 36));
        summLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        summLabel.setText("0,00");
        summLabel.setBorder(javax.swing.BorderFactory.createTitledBorder("Сумма покупки:"));
        summLabel.setName("summLabel"); // NOI18N
        add(summLabel, java.awt.BorderLayout.PAGE_START);

        clientMSummSpinner.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        clientMSummSpinner.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(1.0d)));
        clientMSummSpinner.setBorder(javax.swing.BorderFactory.createTitledBorder("Сумма денег от клиента:"));
        clientMSummSpinner.setName("clientMSummSpinner"); // NOI18N
        clientMSummSpinner.setPreferredSize(new java.awt.Dimension(400, 100));
        clientMSummSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                clientMSummSpinnerStateChanged(evt);
            }
        });
        add(clientMSummSpinner, java.awt.BorderLayout.CENTER);

        toClientLabel.setFont(new java.awt.Font("Dialog", 1, 36));
        toClientLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        toClientLabel.setText("0,00");
        toClientLabel.setBorder(javax.swing.BorderFactory.createTitledBorder("Сдача"));
        toClientLabel.setName("toClientLabel"); // NOI18N
        add(toClientLabel, java.awt.BorderLayout.PAGE_END);

        clearButton.setName("clearButton"); // NOI18N
        clearButton.setPreferredSize(new java.awt.Dimension(80, 25));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        add(clearButton, java.awt.BorderLayout.LINE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clientMSummSpinner.setValue(new Double(0));
        calc();

        ((JSpinner.DefaultEditor) clientMSummSpinner.getEditor()).getTextField().requestFocus();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void clientMSummSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_clientMSummSpinnerStateChanged
        calc();
        
        JSpinner.DefaultEditor e = ((JSpinner.DefaultEditor) clientMSummSpinner.getEditor());
        
        e.getTextField().moveCaretPosition(e.getTextField().getText().length());
    }//GEN-LAST:event_clientMSummSpinnerStateChanged

    private void calc() {
        try {
            double summFromclient = nf.parse(((JSpinner.DefaultEditor) clientMSummSpinner.getEditor()).getTextField().getText()).doubleValue();

            summLabel.setText(df.format(summ));
            toClientLabel.setText(df.format(summ - summFromclient));
        } catch (ParseException ex) {
            toClientLabel.setText("неверный формат суммы");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JSpinner clientMSummSpinner;
    private javax.swing.JLabel summLabel;
    private javax.swing.JLabel toClientLabel;
    // End of variables declaration//GEN-END:variables
}
