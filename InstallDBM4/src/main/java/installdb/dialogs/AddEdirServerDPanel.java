/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddEdirServerDialog.java
 *
 * Created on 12.01.2009, 0:17:10
 */

package installdb.dialogs;

import javax.swing.JOptionPane;
import minersinstrument.ui.IADialogPanel;
import org.jdesktop.application.Action;
import installdb.db.dbsql_tools.DB;


/**
 *
 * @author pacman
 */
public class AddEdirServerDPanel extends javax.swing.JPanel implements IADialogPanel{

    /** Creates new form AddEdirServerDialog */
    public AddEdirServerDPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        serverTextField = new javax.swing.JTextField();
        portJSpiner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        superuserTextField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(installdb.InstallDBApp.class).getContext().getResourceMap(AddEdirServerDPanel.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        serverTextField.setText(resourceMap.getString("serverTextField.text")); // NOI18N
        serverTextField.setName("serverTextField"); // NOI18N

        portJSpiner.setName("portJSpiner"); // NOI18N
        portJSpiner.setValue(5432);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        nameTextField.setText(resourceMap.getString("nameTextField.text")); // NOI18N
        nameTextField.setName("nameTextField"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        superuserTextField.setText(resourceMap.getString("superuserTextField.text")); // NOI18N
        superuserTextField.setName("superuserTextField"); // NOI18N

        passwordField.setText(resourceMap.getString("passwordField.text")); // NOI18N
        passwordField.setName("passwordField"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(installdb.InstallDBApp.class).getContext().getActionMap(AddEdirServerDPanel.class, this);
        jButton1.setAction(actionMap.get("testConnection")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addComponent(serverTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(portJSpiner, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(superuserTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portJSpiner, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(superuserTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JSpinner portJSpiner;
    private javax.swing.JTextField serverTextField;
    private javax.swing.JTextField superuserTextField;
    // End of variables declaration//GEN-END:variables

    public void setCaption(String s){
        nameTextField.setText(s);
    }

    public String getCaption(){
        return nameTextField.getText();
    }

    public void setHost(String s){
        serverTextField.setText(s);
    }

    public String getHost(){
        return serverTextField.getText();
    }


    public void setPort(int i){
        portJSpiner.setValue(i);
    }

    public int getPort(){
        return ((Number)portJSpiner.getValue()).intValue();
    }

    public void setSuperuser(String s){
        superuserTextField.setText(s);
    }

    public String getSuperuser(){
        return superuserTextField.getText();
    }

    public char[] getPassword(){
        return passwordField.getPassword();
    }

    public void setPassword(char[] password){
        passwordField.setText(new String(password));
        
    }


    public boolean checkPanel() {
        if (nameTextField.getText().trim().length()==0) {
            JOptionPane.showMessageDialog(
                    this,
                    "Вы не ввели название соединения.",
                    "Внимание...",
                    JOptionPane.WARNING_MESSAGE);
            nameTextField.requestFocus();
            return false;
        } else if(serverTextField.getText().trim().length()==0){
            JOptionPane.showMessageDialog(
                    this,
                    "Вы не ввели название сервера.",
                    "Внимание...",
                    JOptionPane.WARNING_MESSAGE);
            serverTextField.requestFocus();
            return false;
        } else if(((Number)portJSpiner.getValue()).intValue()==0){
           JOptionPane.showMessageDialog(
                    this,
                    "Вы не ввели номер порта.",
                    "Внимание...",
                    JOptionPane.WARNING_MESSAGE);
            portJSpiner.requestFocus();
            return false;
        } else if(superuserTextField.getText().trim().length()==0){
            JOptionPane.showMessageDialog(
                    this,
                    "Вы не ввели суперпользователя.",
                    "Внимание...",
                    JOptionPane.WARNING_MESSAGE);
            superuserTextField.requestFocus();
            return false;
        } 
        return true;
    }

    public void openPanel() {
        nameTextField.requestFocus();
    }




    @Action
    public void testConnection() {
        if(DB.testConnection(getSuperuser(), new String(getPassword()), getHost(), getPort())){
            JOptionPane.showMessageDialog(this,
                    "Соединение протестировано успешно.",
                    "Внимание...", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Соединение небыло установлено!!!",
                    "Внимание", JOptionPane.WARNING_MESSAGE);
        }
    }

}
